# Git hooks for development workflow
pre-commit:
  parallel: true
  commands:
    format-markdown:
      glob: '*.md'
      run: npx prettier --write {staged_files}
      stage_fixed: true

    lint-markdown:
      glob: '*.md'
      run: npx markdownlint {staged_files}

    lint-changelog:
      files: git diff --cached --name-only
      glob: 'CHANGELOG.md'
      run: |
        if [ -n "{files}" ]; then
          npx markdownlint --config .markdownlint-changelog.json {files}
          node scripts/check-changelog-format.mjs
        fi

    format-js:
      glob: '*.{js,mjs,ts,tsx,json}'
      run: npx prettier --write {staged_files}
      stage_fixed: true

    lint-js:
      glob: '*.{js,mjs,ts,tsx}'
      run: npx eslint {staged_files} --max-warnings 0

    format-csharp:
#      files: git diff --cached --name-only
      glob: 'Assets/{Scripts,Common}/**/*.cs'
      run: |
        if [ -n "{staged_files}" ]; then
          dotnet tool restore
          dotnet tool run csharpier format {staged_files}
        else
          echo "No C# files to check."
        fi

    lint-csharp:
      files: git diff --cached --name-only
      glob: 'Assets/{Scripts,Common}/**/*.cs'
      run: |
        FILES_SEMICOLON=$(echo "{files}" | tr ' ' ';')
        if [ -n "$FILES_SEMICOLON" ]; then
          dotnet format analyzers ./vroid-game-template.sln \
          --include "$FILES_SEMICOLON" \
          --verify-no-changes \
          --verbosity normal
        else
          echo "No C# files to check."
        fi

commit-msg:
  commands:
    commitlint:
      run: npx commitlint --edit $1
